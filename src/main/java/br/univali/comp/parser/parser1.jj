options {
    STATIC = false;
    UNICODE_INPUT = true;
    LOOKAHEAD=2;
}

PARSER_BEGIN(CodeFilter)

import java.io.StringReader;
import java.util.ArrayList;

public class CodeFilter {

    public static void main(String args[]) throws
    ParseException
    {
    CodeFilter parser = new CodeFilter(System.in);
    while (true)
    {
    parser.parseOneLine();
    }
    }

//    public CodeFilter(){
//        this(new StringReader(""));
//    }
//
//    public CodeFilter(String SelectorString){
//        this(new StringReader(SelectorString));
//    }
//
//    public BooleanExpression parse(){
//        return parseSelector();
//    }

}
PARSER_END(CodeFilter)

//Token Manager Declarations
TOKEN_MGR_DECLS :
{
	static int commentLevel = 0 ;
}
<COMMENT> SKIP :{
	"/*"	{	commentLevel++;		}
|	"*/"	{	commentLevel--;
			    if(commentLevel == 0){  SwitchTo(DEFAULT); }
		    }
| 	< ~[] >
}

//Skip the following elements
SKIP : {
    <SPACE : " ">
|   "\t" | "\n" | "\r" | "\r\n"
|	"/-" { commentLevel++; } : COMMENT
}

TOKEN : {
    <NUMERO_INTEIRO: ["1"-"9"] (["1"-"9"])*>
}
TOKEN: {
    <ARITMETICO: ["+", "-", "*", "/", "%"] | "**" | "%%" >
}
TOKEN : {
    <IDENTIFICADOR: ["a" - "z", "A" - "Z"] (["a" - "z", "A" - "Z", "0" - "9", "_", "$"]) *>
}
TOKEN : {
    <LOGICO: ["<", ">", "&", "|", "!"] | "==" | "!=" | "<=" | ">=">
}
TOKEN : {
    <ESPECIAIS: [".", ",", "{", "}", "[", "]", "(", ")"] | ":-">
}
TOKEN : {
    <PALAVRAS_RESERVADAS: "program" | "define" | "not" | "variable" | "is" |
    "execute" | "set" | "to" | "get" | "put" | "loop" | "while" | "true" |
    "false" | "do" | "natural" | "real" | "char" | "boolean">
}

